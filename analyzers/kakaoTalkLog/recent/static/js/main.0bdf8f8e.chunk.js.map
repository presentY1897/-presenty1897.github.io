{"version":3,"sources":["Explain/Explanation.js","Explain/ExplainTab.js","FileUpload.js","TalkingData/FileUploadTab.js","DataChart/BarGraph.js","DataChart/Graph.js","DataChart/TalkerList.js","DataChart/TalkDataViewer.js","TalkingData/Summary.js","TalkingData/TalkFile.js","TalkingData/TalkFilesContainer.js","DataChart/DataViewerTab.js","App.js","serviceWorker.js","index.js"],"names":["Explanation","Container","Component","ExplainTab","style","backgroundColor","Jumbotron","Button","color","FileUpload","state","file","inputChange","e","target","files","setState","type","placeholder","className","onChange","this","Figure","variant","FileUploadTab","BarGraph","props","componentDidUpdate","preProps","data","sum","reduce","acc","cur","person","find","item","key","undefined","count","push","labels","map","idx","_name","name","sort","a","b","datasets","label","margin","options","legend","display","scales","yAxes","ticks","min","stepSize","maintainAspectRatio","responsive","width","Graph","personSum","chat","text","time","minDate","Date","Math","apply","filter","d","isNaN","maxDate","max","dateDivideIterator","start","end","step","arr","startDate","endDate","i","Number","timeStep","curTime","findedTime","diff","getFullYear","getMonth","getDate","getColor","random","randomColor","borderColor","p","fill","TalkerList","ListGroup","horizontal","people","Item","active","TalkDataViewer","durationStr","dur","getDurationString","duration","onClick","click","Summary","component","varient","join","TalkFile","getFileName","cardClickEvent","clickEvent","rawFile","Card","TalkFileContainers","viewerOpen","viewerFile","addFile","addedFiles","clickCard","Collapse","in","length","Row","Col","DataViewerTab","TalkFilesContainer","selectFileEvent","fileChanged","setFullYear","App","fluid","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.0bdf8f8e.chunk.js","sourcesContent":["import { Container } from 'react-bootstrap';\nimport React from 'react';\nimport { Component } from 'react';\n\nclass Explanation extends Component{\n    render(){\n        return (\n            <Container>\n            </Container>\n        );\n    }\n}\n\nexport default Explanation;","import { Container, Button, Jumbotron } from 'react-bootstrap';\nimport React from 'react';\nimport { Component } from 'react';\nimport Explanation from './Explanation';\n\nclass ExplainTab extends Component {\n    render() {\n        return (\n            <Container style={{backgroundColor: '#303030'}}>\n                <Jumbotron>\n                    <h1> 카카오톡 대화 분석기 </h1>\n                    <div>\n                        <Button color='primary'></Button>\n                        <Explanation></Explanation>\n                    </div>\n                </Jumbotron>\n            </Container>\n        );\n    }\n}\n\nexport default ExplainTab;","import React, { Component } from 'react';\nimport { Figure, Button } from 'react-bootstrap';\n\nclass FileUpload extends Component {\n  state = {\n    file: null\n  };\n\n  inputChange = e => {\n      const file = e.target.files[0];\n      this.setState({file: file});\n  };\n  render(){\n    return (\n      <div>\n        <input type='file' placeholder='파일을 올려주세요' className=\"FileInputBox\" onChange={this.inputChange}/>\n        <Figure>\n          파일을 업로드 해주세요.\n        </Figure>\n        <Button variant='secondary' type=\"submit\">확인</Button>\n      </div>\n    );\n  };\n}\n\nexport default FileUpload;","import React, { Component } from 'react';\nimport FileUpload from '../FileUpload';\nimport { Container } from 'react-bootstrap';\n\nclass FileUploadTab extends Component {\n    render(){\n        return(\n            <Container style={{backgroundColor: '#303030'}}>\n                <FileUpload>\n                </FileUpload>\n            </Container>\n        );\n    };\n};\n\nexport default FileUploadTab;","import React, { Component } from 'react';\nimport { HorizontalBar } from \"react-chartjs-2\";\n\nclass BarGraph extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            data: {\n                datasets: [{\n                    label: '# 테스트',\n                    data: [10, 20],\n                    backgroundColor: [\"rgba(255, 99, 132, 0.2)\", \"rgba(54, 162, 235, 0.2)\"],\n                },],\n                labels: ['테스트', '테스트2'],\n            },\n        }\n    };\n    componentDidUpdate = function (preProps) {\n        if (preProps.data !== this.props.data) {\n            const sum = this.props.data.reduce((acc, cur) => {\n                let person = acc.find(item => item.key === cur.person);\n                if (person !== undefined) {\n                    person.count++;\n                } else {\n                    person = {\n                        key: cur.person,\n                        count: 1,\n                    };\n                    acc.push(person);\n                }\n                return acc;\n            }, []);\n            this.setState({\n                data: {\n                    labels: sum.map((item, idx) => {\n                        const _name = item.key.name;\n                        if (_name === undefined) return `${idx}`;\n                        else return `${_name}`;\n                    }).sort((a, b) => a.count > b.count),\n                    datasets: [{\n                        data: sum.map(item => item.count).sort((a, b) => a.count > b.count),\n                        backgroundColor: [\"#11b288\", \"#207ac7\", \"#207ac7\", \"#207ac7\", \"#d6d6d6\", \"#d6d6d6\", \"#d6d6d6\", \"#d6d6d6\"],\n                    }]\n                }\n            });\n        };\n    };\n\n    render() {\n        const options = {\n            legend: {\n                display: false, // label 숨기기\n            },\n            scales: {\n                yAxes: [{\n                    ticks: {\n                        min: 0, // 스케일에 대한 최솟갓 설정, 0 부터 시작\n                        stepSize: 1, // 스케일에 대한 사용자 고정 정의 값\n                    }\n                }]\n            },\n            maintainAspectRatio: false ,// false로 설정 시 사용자 정의 크기에 따라 그래프 크기가 결정됨.\n            responsive: false,\n        };\n\n        const containerCss = {\n            margin: '0 auto'\n        }\n        return (\n            <div style={containerCss}>\n                <HorizontalBar data={this.state.data} options={options} width={400}></HorizontalBar>\n            </div>\n        );\n    };\n}\n\nexport default BarGraph;","import React, { Component } from 'react';\nimport { Line } from \"react-chartjs-2\";\n\nclass Graph extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            data: {\n                datasets: [{\n                    label: '# 테스트',\n                    data: [10, 20],\n                    fill: false,\n                    backgroundColor: [\"rgba(255, 99, 132, 0.2)\"],\n                }, {\n                    label: '테스트2',\n                    data: [20, 120],\n                    fill: false,\n                    backgroundColor: [\"rgba(255, 99, 132, 0.2)\"],\n                }],\n                labels: ['0', '1'],\n            },\n        }\n    };\n    componentDidUpdate = function (preProps) {\n        if (preProps.data !== this.props.data) {\n            const personSum = this.props.data.reduce((acc, cur) => {\n                let person = acc.find(item => item.key === cur.person);\n                if (person !== undefined) {\n                    person.chat.push({\n                        text: cur.text,\n                        time: cur.time\n                    });\n                } else {\n                    person = {\n                        key: cur.person,\n                        chat: [{\n                            text: cur.text,\n                            time: cur.time\n                        }],\n                    };\n                    acc.push(person);\n                }\n                return acc;\n            }, []);\n            const minDate = new Date(Math.min.apply(0, personSum.map(person => Math.min.apply(0, person.chat.map(chat => new Date(chat.time)))).filter(d => isNaN(d) === false)));\n            const maxDate = new Date(Math.max.apply(0, personSum.map(person => Math.max.apply(0, person.chat.map(chat => new Date(chat.time)))).filter(d => isNaN(d) === false)));\n            const dateDivideIterator = (start, end, step) => {\n                let arr = [];\n                const startDate = new Date(start);\n                const endDate = new Date(end);\n                for (let i = startDate; i < endDate; i = new Date(Number(i) + step)) {\n                    arr.push({ time: [i, new Date(Number(i) + step)], count: 0 });\n                }\n                return arr;\n            }\n            const divideCount = 100;\n            const timeStep = (maxDate - minDate) / divideCount;//1 * 24 * 60 * 60000;\n            const sum = personSum.map(person => {\n                person.data = person.chat.reduce((acc, cur) => {\n                    const curTime = new Date(cur.time);\n                    const findedTime = acc.find(diff => diff.time[0] <= curTime && diff.time[1] >= curTime);\n                    if (findedTime !== undefined) findedTime.count++;\n                    return acc;\n                }, dateDivideIterator(minDate, maxDate, timeStep));\n\n                return person;\n            });\n            this.setState({\n                data: {\n                    labels: dateDivideIterator(minDate, maxDate, timeStep).map((d, idx) => { const time = d.time[0]; return `${time.getFullYear()}-${time.getMonth()}-${time.getDate()}` }),\n                    datasets:\n                        sum.map((person, idx) => {\n                            const _name = person.key.name;\n                            let name = `${_name}`;\n                            if (_name === undefined) name = `${idx}`;\n                            const getColor = () => Math.random() *  255;\n                            const randomColor = `rgba(${getColor()}, ${getColor()}, ${getColor()}, 0.2)`\n                            return {\n                                borderColor: randomColor,\n                                backgroundColor: randomColor,\n                                data: person.data.map(p => p.count),\n                                fill: false,\n                                label: name,\n                            }\n                        })\n\n                }\n            });\n        };\n    };\n\n    render() {\n        const options = {\n            legend: {\n                display: false, // label 숨기기\n            },\n            scales: {\n                yAxes: [{\n                    ticks: {\n                        min: 0, // 스케일에 대한 최솟갓 설정, 0 부터 시작\n                        stepSize: 1, // 스케일에 대한 사용자 고정 정의 값\n                    }\n                }]\n            }\n        };\n\n        const containerCss = {\n            margin: '0 auto'\n        }\n        return (\n            <div style={containerCss} >\n                <Line data={this.state.data} options={options}> </Line>\n            </div>\n        );\n    };\n}\n\nexport default Graph;","import { ListGroup } from 'react-bootstrap';\nimport React, { Component } from 'react';\n\nclass TalkerList extends Component {\n    render() {\n        return (\n            <ListGroup horizontal>{\n                this.props.people !== undefined ? this.props.people.map(person => <ListGroup.Item active>{person.name}</ListGroup.Item>) : ''\n            }</ListGroup>\n        );\n    };\n};\n\nexport default TalkerList;","import { Button, Jumbotron } from 'react-bootstrap';\nimport React, { Component } from 'react';\nimport BarGraph from './BarGraph';\nimport Graph from './Graph';\nimport TalkerList from './TalkerList';\n\nclass TalkDataViewer extends Component {\n    render() {\n        const name = this.props.file !== undefined ? this.props.file.name : '';\n        const people = this.props.file !== undefined ? this.props.file.people : [];\n        const getDurationString = (dur) => {\n            const startDate = new Date(dur[0]);\n            const endDate = new Date(dur[1]);\n            return `${startDate.getFullYear()}-${startDate.getMonth()}-${startDate.getDate()} ~ ${endDate.getFullYear()}-${endDate.getMonth()}-${endDate.getDate()}`;\n        }\n        const durationStr = this.props.file !== undefined ? getDurationString(this.props.file.duration) : '';\n        return (\n            <Jumbotron>\n                <Button onClick={this.props.click}>닫기</Button>\n                <h1>{name}</h1>\n                <h3>기간 : {durationStr}</h3>\n                <TalkerList people={people}></TalkerList>\n                <BarGraph></BarGraph>\n                <Graph></Graph>\n            </Jumbotron>\n        );\n    };\n};\n\nexport default TalkDataViewer;","import React, { Component } from 'react';\nimport { Container } from 'react-bootstrap';\n\nclass Summary extends Component {\n    render() {\n        const getDurationString = (dur) => {\n            const startDate = new Date(dur[0]);\n            const endDate = new Date(dur[1]);\n            return `${startDate.getFullYear()}-${startDate.getMonth()}-${startDate.getDate()} ~ ${endDate.getFullYear()}-${endDate.getMonth()}-${endDate.getDate()}`;\n        }\n        const getPeopleNameString = (people) => {\n            return people.map(person => person.name).join(',');\n        }\n        return (\n            <Container>\n                <h3 component='h3' varient='h3'>{this.props.name}</h3>\n                <h5 variant=\"subtitle1\" color=\"textSecondary\">기간 : {getDurationString(this.props.duration)}</h5>\n                <h5 variant=\"subtitle1\" color=\"textSecondary\">참여자: {getPeopleNameString(this.props.people)}</h5>\n            </Container>\n        );\n    }\n}\n\nexport default Summary;","import React, { Component } from 'react';\nimport Summary from './Summary';\nimport { Card } from 'react-bootstrap'\n\nclass TalkFile extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      file: this.props.rawFile,\n      name: this.getFileName(this.props.rawFile),\n    };\n  }\n\n  getFileName = function (file) {\n    let result = '';\n\n    if (file !== null && file !== undefined) {\n      result = file.name;\n    } else {\n      result = '';\n    }\n    return result;\n  }\n\n  cardClickEvent = () => {\n    this.props.clickEvent(this.state.file);\n  }\n\n  render() {\n    return (\n      <Card onClick={this.cardClickEvent}>\n        <div>\n          <Summary name={this.props.rawFile.name} duration={this.props.rawFile.duration} people={this.props.rawFile.people}></Summary>\n        </div>\n      </Card>\n    );\n  }\n}\n\nexport default TalkFile;","import React, { Component } from 'react';\nimport { Container, Row, Col, Collapse } from 'react-bootstrap';\nimport TalkDataViewer from '../DataChart/TalkDataViewer';\nimport TalkFile from './TalkFile';\n\nclass TalkFileContainers extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      files: [],\n      viewerOpen: false,\n      viewerFile: undefined,\n    }\n  }\n\n  componentDidUpdate(preProps) {\n    if (preProps !== this.props && this.props.addFile !== undefined) {\n      const addedFiles = this.state.files;\n      addedFiles.push(this.props.addFile);\n      this.setState({ files: addedFiles });\n    }\n  }\n\n  render() {\n    const col = 4;\n    let count = 0;\n    const clickCard = (file) => {\n      if (this.state.viewerOpen && this.state.viewerFile === file) this.setState({ viewerOpen: false, viewerFile: file })\n      else this.setState({ viewerOpen: true, viewerFile: file })\n    }\n    const closeViewerTab = () => {\n      this.setState({ viewerOpen: false });\n    }\n    return (\n      <div>\n        <Container>\n          <Collapse in={!this.state.viewerOpen}>\n            <div>\n              {this.props.files !== undefined ? this.props.files.reduce((acc, cur) => {\n                if (count === 0) {\n                  acc.push([cur]);\n                } else {\n                  acc[acc.length - 1].push(cur);\n                }\n                count++;\n                if (count === col) count = 0;\n                return acc;\n              }, []).map((arr) => {\n                return <Row>\n                  {arr.map((file) =>\n                    <Col>\n                      <TalkFile rawFile={file} clickEvent={clickCard}></TalkFile>\n                    </Col>\n                  )}\n                </Row>\n              }) : ''}\n            </div>\n          </Collapse>\n          <Collapse in={this.state.viewerOpen}>\n            <Row>\n              <Col>\n                <TalkDataViewer file={this.state.viewerFile} click={closeViewerTab}></TalkDataViewer>\n              </Col>\n            </Row>\n          </Collapse>\n        </Container>\n      </div>\n    );\n  }\n}\n\nexport default TalkFileContainers;","import React, { Component } from 'react';\nimport TalkFilesContainer from '../TalkingData/TalkFilesContainer';\nimport { Container } from 'react-bootstrap';\n\nclass DataViewerTab extends Component {\n    render() {\n        return (\n            <Container style={{backgroundColor: '#303030'}}>\n                <TalkFilesContainer addFile={this.props.file} selectFileEvent={this.props.fileChanged} files={\n                    [\n                        {name: '테스트 1', duration: [new Date().setFullYear(2017), new Date()], people: [{key:0, name:'테스트1'}, {key:1, name:'테스트2'}]},\n                        {name: '테스트 2', duration: [new Date().setFullYear(2017), new Date()], people: [{key:0, name:'테스트1'}, {key:1, name:'테스트2'}, {key:2, name:'테스트3'}]},\n                        {name: '누구랑 누구랑 언제부터 언제까지 한 이야기 1', duration: [new Date().setFullYear(2017), new Date()], people: [{key:0, name:'테스트1'}, {key:1, name:'테스트2'}, {key:2, name:'테스트3'}]},\n                        {name: '누구랑 누구랑 언제부터 언제까지 한 이야기 2', duration: [new Date().setFullYear(2017), new Date()], people: [{key:0, name:'테스트1'}, {key:1, name:'테스트2'}]},\n                        {name: '테스트 3', duration: [new Date().setFullYear(2017), new Date()], people: [{key:0, name:'테스트1'}, {key:1, name:'테스트2'}]}\n                    ]\n                }></TalkFilesContainer>\n            </Container>\n        );\n    };\n};\n\nexport default DataViewerTab;","import React from 'react';\nimport './App.css';\nimport ExplainTab from './Explain/ExplainTab';\nimport FileUploadTab from './TalkingData/FileUploadTab';\nimport DataViewerTab from './DataChart/DataViewerTab';\nimport { Row, Container, Col } from 'react-bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nfunction App() {\n  return (\n    <div>\n      <Container fluid style={{ backgroundColor: '#d5d5d5' }}>\n        <Row>\n          <Col>\n            <ExplainTab></ExplainTab>\n          </Col>\n        </Row>\n        <Row>\n          <Col>\n            <FileUploadTab></FileUploadTab>\n          </Col>\n        </Row>\n        <Row>\n          <Col>\n            <DataViewerTab></DataViewerTab>\n          </Col>\n        </Row>\n      </Container>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}